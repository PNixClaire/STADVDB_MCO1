CREATE SCHEMA IF NOT EXISTS dw_books_movies;
SET search_path TO dw_books_movies;

-- ----------------------------
-- Dimension Table: Dim_Date
-- ----------------------------
CREATE TABLE Dim_Date (
    Date_SK INT NOT NULL,
    Full_Date DATE NOT NULL,
    Year INT NOT NULL,
    Month INT NOT NULL,
    Month_Name VARCHAR(20) NOT NULL,
    Quarter CHAR(2) NOT NULL,
    Day_of_Week VARCHAR(20) NOT NULL,
    PRIMARY KEY (Date_SK)
);

-- ----------------------------
-- Dimension Table: Dim_Book
-- ----------------------------
CREATE TABLE Dim_Book (
    Book_SK INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    Book_ID_Source VARCHAR(100),
    ISBN VARCHAR(13),
    Title VARCHAR(500) NOT NULL,
    Author VARCHAR(500),
    Publisher VARCHAR(255),
    Publication_Date DATE,
    Language_Code CHAR(3),
    Num_Pages INT,
    PRIMARY KEY (Book_SK)
);

-- ----------------------------
-- Dimension Table: Dim_Movie
-- ----------------------------
CREATE TABLE Dim_Movie (
    Movie_SK INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    Movie_Title_Source VARCHAR(500) NOT NULL,
    Release_Date DATE,
    Release_Year INT,
    Distributor VARCHAR(255),
    Genre VARCHAR(100),
    Director VARCHAR(255),
    PRIMARY KEY (Movie_SK)
);

-- ----------------------------
-- Dimension Table: Dim_Actor
-- ----------------------------
CREATE TABLE Dim_Actor (
    Actor_SK INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    Actor_ID_Source VARCHAR(100),
    Name VARCHAR(255) NOT NULL,
    Birth_Year INT,
    Primary_Profession VARCHAR(255),
    Popularity_Score DECIMAL(10, 2),
    PRIMARY KEY (Actor_SK)
);

-- ----------------------------
-- Fact Table: Fact_Book_Adaptation
-- ----------------------------
CREATE TABLE Fact_Book_Adaptation (
    Book_SK INT NOT NULL,
    Movie_SK INT NOT NULL,
    Movie_Release_Date_SK INT NOT NULL,
    Box_Office_Gross DECIMAL(18, 2),
    Tickets_Sold BIGINT, -- Using BIGINT for large numbers
    Production_Budget DECIMAL(18, 2),
    Profit DECIMAL(18, 2),
    ROI DECIMAL(10, 2),
    Book_Average_Rating DECIMAL(4, 2),
    Book_Ratings_Count INT,
    Book_Text_Reviews_Count INT,
    Movie_Average_Rating DECIMAL(4, 2),
    Movie_Review_Count INT,
    
    PRIMARY KEY (Book_SK, Movie_SK),
    
    FOREIGN KEY (Book_SK) REFERENCES Dim_Book(Book_SK),
    FOREIGN KEY (Movie_SK) REFERENCES Dim_Movie(Movie_SK),
    FOREIGN KEY (Movie_Release_Date_SK) REFERENCES Dim_Date(Date_SK)
);


-- ----------------------------
-- Bridge Table: Bridge_Movie_Actor
-- ----------------------------
CREATE TABLE Bridge_Movie_Actor (
    Movie_SK INT NOT NULL,
    Actor_SK INT NOT NULL,
    Role VARCHAR(100),
    PRIMARY KEY (Movie_SK, Actor_SK),
    FOREIGN KEY (Movie_SK) REFERENCES Dim_Movie(Movie_SK),
    FOREIGN KEY (Actor_SK) REFERENCES Dim_Actor(Actor_SK)
);




